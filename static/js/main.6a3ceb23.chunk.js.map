{"version":3,"sources":["containers/NeonatalFluidCalculator.jsx","components/Header.jsx","components/Layout.jsx","assets/images/MedicineProfile.png","containers/About.jsx","assets/functions/appInit.js","components/AppTitle.jsx","App.js","reportWebVitals.js","index.js"],"names":["dextrosaSeleccionadaEnCc","dextrosaSeleccionada","ccDiference","electrolitosMostrados","porcentajeDeDextrosa","usoCateter","cantidadDextrosaAl5Porciento","cantidadDextrosaAl10Porciento","cantidadDextrosaAl30Porciento","cantidadDextrosaAl50Porciento","Header","className","Dropdown","Toggle","variant","id","Menu","Item","to","Layout","children","About","src","medicineProfile","alt","appInit","peso","diasDeNacido","hipoglicemiaChecked","dextrosaNecesaria","natrolEnCc","katrolEnCC","dex","CIEN","cantidadDeLiquidos","dias","console","log","parseFloat","AppTitle","title","subtitle","NeonatalFluidCalculator","useState","user_peso","user_dias","patient","setPatient","show","setShow","hipoglicemiaCheck","setHipoglicemiaCheck","handleChange","event","target","name","value","pesoString","parseInt","diasString","appResults","action","method","htmlFor","type","onChange","onClick","toFixed","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a3ceb23.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport appInit from '../assets/functions/appInit';\nimport AppTitle from '../components/AppTitle'\nimport '../assets/styles/components/NeonatalFluidCalculator.css'\n// import { \n  // appInit,\n  // dextrosaSeleccionadaEnCc,\n  // dextrosaSeleccionada, \n  // ccDiference,\n  // electrolitosMostrados,\n  // porcentajeDeDextrosa,\n  // usoCateter,\n  // cantidadDextrosaAl5Porciento,\n  // cantidadDextrosaAl10Porciento,\n  // cantidadDextrosaAl30Porciento,\n  // cantidadDextrosaAl50Porciento\n// } from '../assets/functions/appInit'\n\n \n  let dextrosaSeleccionadaEnCc\n  let dextrosaSeleccionada\n  let ccDiference\n  let electrolitosMostrados\n  let porcentajeDeDextrosa\n  let usoCateter\n  let cantidadDextrosaAl5Porciento\n  let cantidadDextrosaAl10Porciento\n  let cantidadDextrosaAl30Porciento\n  let cantidadDextrosaAl50Porciento\n\n\n\nconst NeonatalFluidCalculator = () => {\n  \n  const [patient, setPatient] = useState({\n    user_peso: \"0\",\n    user_dias: \"0\"\n  })\n  const [show, setShow] = useState(false)\n  const [hipoglicemiaCheck, setHipoglicemiaCheck] = useState(false)\n\n  const toggleCheck = () => {\n    setHipoglicemiaCheck(!hipoglicemiaCheck)\n    setShow(false)\n  }\n\n  const handleChange = event => {\n    \n    setPatient({\n      ...patient,\n      [event.target.name]: event.target.value,\n      hola: \"Hola\"\n    })\n\n    const pesoString = patient.user_peso\n    const peso = parseInt(pesoString)\n    const diasString = patient.user_dias\n    const dias = parseInt(diasString)\n    const appResults = appInit(peso, dias, hipoglicemiaCheck)\n    // dextrosaSeleccionadaEnCc = appResults.dextrosaSeleccionadaEnCc.toFixed(1)\n    // console.log(dextrosaSeleccionadaEnCc)\n    // dextrosaSeleccionada = appResults.dextrosaSeleccionada\n    // ccDiference = appResults.ccDiference.toFixed(1)\n    // electrolitosMostrados = appResults.electrolitosMostrados\n    // porcentajeDeDextrosa = appResults.porcentajeDeDextrosa.toFixed(1)\n    // usoCateter = appResults.usoCateter\n    // cantidadDextrosaAl5Porciento = appResults.cantidadDextrosaAl5Porciento.toFixed(1)\n    // cantidadDextrosaAl10Porciento = appResults.cantidadDextrosaAl10Porciento.toFixed(1)\n    // cantidadDextrosaAl30Porciento = appResults.cantidadDextrosaAl30Porciento.toFixed(1)\n    // cantidadDextrosaAl50Porciento = appResults.cantidadDextrosaAl50Porciento.toFixed(1)\n    dextrosaSeleccionadaEnCc = appResults.dextrosaSeleccionadaEnCc\n    dextrosaSeleccionada = appResults.dextrosaSeleccionada\n    ccDiference = appResults.ccDiference\n    electrolitosMostrados = appResults.electrolitosMostrados\n    porcentajeDeDextrosa = appResults.porcentajeDeDextrosa\n    usoCateter = appResults.usoCateter\n    cantidadDextrosaAl5Porciento = appResults.cantidadDextrosaAl5Porciento\n    cantidadDextrosaAl10Porciento = appResults.cantidadDextrosaAl10Porciento\n    cantidadDextrosaAl30Porciento = appResults.cantidadDextrosaAl30Porciento\n    cantidadDextrosaAl50Porciento = appResults.cantidadDextrosaAl50Porciento\n\n    setShow(false)\n  }\n  const handleClick = () => {\n    const pesoString = patient.user_peso\n    const peso = parseInt(pesoString)\n    const diasString = patient.user_dias\n    const dias = parseInt(diasString)\n    const appResults = appInit(peso, dias, hipoglicemiaCheck)\n    // SETEO DE VARIABLES\n    dextrosaSeleccionadaEnCc = appResults.dextrosaSeleccionadaEnCc\n    dextrosaSeleccionada = appResults.dextrosaSeleccionada\n    ccDiference = appResults.ccDiference\n    electrolitosMostrados = appResults.electrolitosMostrados\n    porcentajeDeDextrosa = appResults.porcentajeDeDextrosa\n    usoCateter = appResults.usoCateter\n    cantidadDextrosaAl5Porciento = appResults.cantidadDextrosaAl5Porciento\n    cantidadDextrosaAl10Porciento = appResults.cantidadDextrosaAl10Porciento\n    cantidadDextrosaAl30Porciento = appResults.cantidadDextrosaAl30Porciento\n    cantidadDextrosaAl50Porciento = appResults.cantidadDextrosaAl50Porciento\n\n    if(peso && dias) {\n      setShow(true)\n    }\n  }\n\n\n  // console.log(show)\n\n  return (\n    <div className=\"app-container\">\n      <AppTitle title=\"Liquidos en neonatos\" subtitle=\"LOS PRIMEROS 5 DIAS DE VIDA\" />\n      <div className=\"form-container\">\n      <form action=\"\" method=\"\">\n        <ul className=\"form\">\n          <li>\n            <label htmlFor=\"peso\">Peso del paciente (kg)</label> <br/>\n            <input\n              className=\"inputs\" \n              type=\"text\" \n              id=\"peso\" \n              name=\"user_peso\"\n              onChange={handleChange}\n            />\n          </li>        \n          <li>\n            <label htmlFor=\"dias\">Dias de vida</label> <br/>\n            <input \n              className=\"inputs\" \n              type=\"text\" \n              id=\"dias\" \n              name=\"user_dias\" \n              onChange={handleChange}\n            />\n          </li>        \n          <li  className=\"hipoglicemia-input\">          \n            <input \n              type=\"checkbox\" \n              id=\"dias\" \n              name=\"hipoglicemia\" \n              onChange={toggleCheck}\n            />\n            <label htmlFor=\"hipoglicemia\">Tiene una hipoglicemia que requiere flujo metabolico de 9</label> <br/>\n          </li>        \n          <li className=\"button-container\">\n            <button \n              className=\"success-button\" \n              type=\"button\" \n              id=\"botonCalcular\"\n              onClick={handleClick}\n            >Calcular</button>\n          </li>        \n        </ul>\n      </form>\n      </div>\n      {show ? \n      <>\n        <div className=\"resultados-container\">\n          <h4 className=\"resultados-title\">FORMULA</h4>\n          <ul className=\"resultados-list\">\n            <li>\n              <label id=\"liquidosNecesarios\">-Administrar {dextrosaSeleccionadaEnCc.toFixed(1)} CC de {dextrosaSeleccionada}<br/> y agregar {ccDiference.toFixed(1)} CC de agua destilada. <br/>En 24 horas.</label>\n            </li>      \n            <li>\n              <label id=\"electrolitos\">{electrolitosMostrados}</label>\n            </li>\n            <li>\n              <label id=\"concentracion\">(La solución tendrá una concentración de {porcentajeDeDextrosa.toFixed(1)}% dextrosa)</label>\n            </li>      \n            <li>\n              <label id=\"cateterCentral\">{usoCateter}</label>\n            </li>        \n          </ul>\n        </div>\n        <div className=\"text-container\">\n          <h3>En caso de querer hacer los calculos manualmente estas son las cantidades de dextrosa en CC que se necesitan segun su concentracion</h3>\n        </div>\n        <div className=\"otras-dextrosas-container\">\n          <h4 className=\"resultados-title\">Otras dextrosas</h4>\n          <ul className=\"resultados-list\">\n            <li>\n              <label id=\"resultado5\">-Dextrosa al 5 en cc :---{cantidadDextrosaAl5Porciento.toFixed(1)} CC</label>\n            </li>        \n            <li>\n              <label id=\"resultado10\">-Dextrosa al 10 en cc :---{cantidadDextrosaAl10Porciento.toFixed(1)} CC</label>\n            </li>\n            <li>\n              <label id=\"resultado30\">-Dextrosa al 30 en cc :---{cantidadDextrosaAl30Porciento.toFixed(1)} CC</label>\n            </li>\n            <li>\n              <label id=\"resultado50\">-Dextrosa al 50 en cc :---{cantidadDextrosaAl50Porciento.toFixed(1)} CC</label>\n            </li>      \n          </ul>      \n        </div>\n      </>\n      : \"\"}\n    </div>\n  )\n}\n\nexport  default NeonatalFluidCalculator","import '../assets/styles/components/Header.css'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n  return(\n    <div className=\"Header\">\n      <div>\n        <h1 className=\"logo\">DD</h1>\n      </div>\n      <div className=\"title-container\">\n        <h2>Daru</h2>\n        <h2 className=\"doctor\">doctor</h2>\n      </div>\n      <Dropdown className=\"burger-menu\">\n        <Dropdown.Toggle className=\"burger-button\" variant=\"Secondary\" id=\"dropdown-basic\">\n          ____<br/>\n          ___<br/>\n          ____\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item><Link to=\"/liquidos-neonatos\">App</Link></Dropdown.Item>\n          <Dropdown.Item><Link to=\"/about\">About</Link></Dropdown.Item>\n          {/* <Dropdown.Item><Link to=\"/portfolio\">Portfolio</Link></Dropdown.Item> */}\n          {/* <Dropdown.Item><Link to=\"/contact\">Contact</Link></Dropdown.Item> */}\n        </Dropdown.Menu>\n      </Dropdown>\n      <div className=\"navbar\">\n\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import Header from './Header'\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"Main\">\n      <Header />\n        {children}\n    </div>    \n  )\n}\n\nexport default Layout","export default __webpack_public_path__ + \"static/media/MedicineProfile.d657e9fd.png\";","import '../assets/styles/components/About.css'\nimport medicineProfile from '../assets/images/MedicineProfile.png'\n\nconst About = () => {\n  return(\n    <div className=\"about-container\">\n      <h2 className=\"title-about\">About me</h2>\n      <p className=\"p-about\">I'm a medical student and web developer. <br></br></p>\n      <p className=\"p-about\">All people know at least one way to change the world, but they never act. <br></br></p>\n      <p> </p>\n      <p> </p>\n      <p className=\"p-about p-about-short\">\n        I can't stop thinking about how I can help, so if you have a good idea, I want to work with you. Get in touch with me\n      </p>\n      <div className=\"mpi-cover\">\n\n      </div>\n      <figure className=\"mpi-container\">\n      </figure>\n        <img className=\"medicine-profile-image\" src={medicineProfile} alt=\"medic watching at infinite\"/>\n    </div>\n  )\n}\n\nexport default About","const appInit = (peso, diasDeNacido, hipoglicemiaChecked) => {\n     //constants\n      const MINUTOS_DIA = 1440\n      const MG_DEXTROSA_AL_5 = 5000\n      const MG_DEXTROSA_AL_10 = 10000\n      const MG_DEXTROSA_AL_30 = 30000\n      const MG_DEXTROSA_AL_50 = 50000\n      const CIEN = 100\n      //variables\n      let fmIdeal\n      // let peso = results.user_peso.parseInt()\n      let dextrosaNecesaria\n      let cantidadDextrosaAl5Porciento\n      let cantidadDextrosaAl10Porciento\n      let cantidadDextrosaAl30Porciento\n      let cantidadDextrosaAl50Porciento\n      // let diasDeNacido = results.user_dias.parseInt()\n      let dextrosaSeleccionada\n      let dextrosaSeleccionadaEnCc\n      let ccDiference\n      let porcentajeDeDextrosa\n      let natrolEnCc\n      let meqNatrol\n      let katrolEnCC\n      let electrolitosMostrados\n      let usoCateter\n      //elements\n      // let hipoglicemiaChecked = results.hipoglicemia\n      // functions\n      const cantidadDeLiquidos = (dias) => {\n        switch(dias) {\n          case 1:\n            return peso * 60\n            // break\n          case 2:\n            return peso * 80\n            // break\n          case 3:\n            return peso * 100\n            // break\n          case 4:\n            return peso * 125\n            // break\n          case 5:\n            return peso * 140\n            // break\n          default:\n            console.log('el campo esta vacio')\n            break\n        }\n      }\n\n      function hypoglycemiaValidation() {\n        if(hipoglicemiaChecked) {\n          fmIdeal = 9\n        } else {\n          fmIdeal = 4\n        }\n      }\n      \n      function calculateDextroseNeeded() {\n        dextrosaNecesaria = fmIdeal * MINUTOS_DIA * peso\n      }\n      function calculateCcDextrose() {\n        cantidadDextrosaAl5Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_5\n        cantidadDextrosaAl10Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_10\n        cantidadDextrosaAl30Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_30\n        cantidadDextrosaAl50Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_50\n      }\n      \n      function seleccionarDextrosa(dex) {\n        if(dex > cantidadDextrosaAl10Porciento) {\n          dextrosaSeleccionada = \"Dextrosa al 10%\"\n          dextrosaSeleccionadaEnCc = cantidadDextrosaAl10Porciento\n        } else if(dex > cantidadDextrosaAl50Porciento) {\n          dextrosaSeleccionada = \"Dextrosa al 50%\"\n          dextrosaSeleccionadaEnCc = cantidadDextrosaAl50Porciento\n        } else {\n          dextrosaSeleccionada = \"Error: No se pudo seleccionar una dextrosa\"\n          dextrosaSeleccionadaEnCc = \"Error: No se pudo seleccionar una dextrosa\"\n        }\n      }\n      function calculateCcDiference() {\n        ccDiference = cantidadDeLiquidos(diasDeNacido) - dextrosaSeleccionadaEnCc\n      }\n      function finalConcentrationCalculation() {\n        porcentajeDeDextrosa = ((dextrosaNecesaria / 1000) * CIEN) / cantidadDeLiquidos(diasDeNacido)\n      }\n      function electrolytesCalculation() {\n        if(parseFloat(diasDeNacido) >= 3) {\n          meqNatrol = peso * 3\n          natrolEnCc = (meqNatrol * 10) / 20\n          katrolEnCC = natrolEnCc / 2\n          electrolitosMostrados = `-Agregar ${natrolEnCc} CC de Natrol y ${katrolEnCC} CC de Katrol`\n        } else if(parseFloat(diasDeNacido) >= 2){\n          meqNatrol = peso * 3\n          natrolEnCc = (meqNatrol * 10) / 20\n          electrolitosMostrados = `-Agregar ${natrolEnCc} CC de Natrol`\n        } else {\n          electrolitosMostrados = `-No se agregan electrolitos`\n        }\n      }\n      function catheterValidation() {\n        if(porcentajeDeDextrosa > 12.5) {\n          usoCateter = \"Debido a la concentración debe utilizarse catéter central\"\n        } else {\n          usoCateter = \"-No necesita catéter central\"\n        }\n      }\n      hypoglycemiaValidation()\n      //calculates how much dextrose the patient needs in miligrams\n      calculateDextroseNeeded()\n      //calulates the amount of dextrosa in CC based on each concentration\n      calculateCcDextrose()\n      //selects the concentration of dextrose that the patient needs\n      seleccionarDextrosa(cantidadDeLiquidos(diasDeNacido))\n      //calculates how much saline solution you need to increase to dextrose to meet the requirements\n      calculateCcDiference()\n      //calculates which is the final concentration of solution    \n      finalConcentrationCalculation()\n      //validates if the patient needs electrolits and calculate how much needs   \n      electrolytesCalculation()\n      //catheter use determination \n      catheterValidation()\n\n      return ({\n        dextrosaSeleccionadaEnCc,\n        dextrosaSeleccionada, \n        ccDiference,\n        electrolitosMostrados,\n        porcentajeDeDextrosa,\n        usoCateter,\n        cantidadDextrosaAl5Porciento,\n        cantidadDextrosaAl10Porciento,\n        cantidadDextrosaAl30Porciento,\n        cantidadDextrosaAl50Porciento\n      })\n\n} \n    \nexport default appInit","import '../assets/styles/components/AppTitle.css'\n\nconst AppTitle = ({ title, subtitle }) => {\n  return(\n    <div className=\"app-title-container\">\n      <h2 className=\"app-title\">{title}</h2>\n      {subtitle ? <h2 className=\"app-subtitle\">{subtitle}</h2>: \"\"}\n    </div>\n  )\n}\n\nexport default AppTitle","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Layout from './components/Layout'\nimport About from './containers/About'\nimport NeonatalFluidCalculator from './containers/NeonatalFluidCalculator';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/liquidos-neonatos\" component={NeonatalFluidCalculator} />\n          <Route exact component={NeonatalFluidCalculator} />\n        </Switch>\n      </Layout>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}