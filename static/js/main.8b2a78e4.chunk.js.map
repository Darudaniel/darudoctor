{"version":3,"sources":["containers/NeonatalFluidCalculator.jsx","components/Header.jsx","components/Layout.jsx","assets/images/MedicineProfile.png","containers/About.jsx","containers/Contact.jsx","components/Project.jsx","assets/images/Batatabit.png","assets/images/Helados.png","assets/images/Aplastaos.png","assets/images/RickAndMortyHeadsOrTails.png","containers/Portfolio.jsx","assets/functions/appInit.js","components/AppTitle.jsx","App.js","reportWebVitals.js","index.js"],"names":["dextrosaSeleccionadaEnCc","dextrosaSeleccionada","ccDiference","electrolitosMostrados","porcentajeDeDextrosa","usoCateter","cantidadDextrosaAl5Porciento","cantidadDextrosaAl10Porciento","cantidadDextrosaAl30Porciento","cantidadDextrosaAl50Porciento","Header","className","to","Dropdown","Toggle","variant","id","Menu","Item","type","Layout","children","About","src","medicineProfile","alt","Contact","instagram","icon","faInstagram","size","github","faGithub","linkedin","faLinkedin","twitter","faTwitter","href","Project","title","description","image","link","Portfolio","batatabitImage","hotRickAndMorty","heladosImage","aplastaosImage","appInit","peso","diasDeNacido","hipoglicemiaChecked","dextrosaNecesaria","natrolEnCc","katrolEnCC","dex","CIEN","cantidadDeLiquidos","dias","console","log","parseFloat","AppTitle","subtitle","NeonatalFluidCalculator","useState","user_peso","user_dias","patient","setPatient","show","setShow","hipoglicemiaCheck","setHipoglicemiaCheck","handleChange","event","target","name","value","pesoString","parseInt","diasString","appResults","action","method","htmlFor","onChange","onClick","toFixed","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b2a78e4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport appInit from '../assets/functions/appInit';\nimport AppTitle from '../components/AppTitle'\nimport '../assets/styles/components/NeonatalFluidCalculator.css'\n// import { \n  // appInit,\n  // dextrosaSeleccionadaEnCc,\n  // dextrosaSeleccionada, \n  // ccDiference,\n  // electrolitosMostrados,\n  // porcentajeDeDextrosa,\n  // usoCateter,\n  // cantidadDextrosaAl5Porciento,\n  // cantidadDextrosaAl10Porciento,\n  // cantidadDextrosaAl30Porciento,\n  // cantidadDextrosaAl50Porciento\n// } from '../assets/functions/appInit'\n\n \n  let dextrosaSeleccionadaEnCc\n  let dextrosaSeleccionada\n  let ccDiference\n  let electrolitosMostrados\n  let porcentajeDeDextrosa\n  let usoCateter\n  let cantidadDextrosaAl5Porciento\n  let cantidadDextrosaAl10Porciento\n  let cantidadDextrosaAl30Porciento\n  let cantidadDextrosaAl50Porciento\n\n\n\nconst NeonatalFluidCalculator = () => {\n  \n  const [patient, setPatient] = useState({\n    user_peso: \"0\",\n    user_dias: \"0\"\n  })\n  const [show, setShow] = useState(false)\n  const [hipoglicemiaCheck, setHipoglicemiaCheck] = useState(false)\n\n  const toggleCheck = () => {\n    setHipoglicemiaCheck(!hipoglicemiaCheck)\n    setShow(false)\n  }\n\n  const handleChange = event => {\n    \n    setPatient({\n      ...patient,\n      [event.target.name]: event.target.value,\n      hola: \"Hola\"\n    })\n\n    const pesoString = patient.user_peso\n    const pesoNumber = parseInt(pesoString)\n    const peso = pesoNumber / 1000\n    const diasString = patient.user_dias\n    const dias = parseInt(diasString)\n    const appResults = appInit(peso, dias, hipoglicemiaCheck)\n    // dextrosaSeleccionadaEnCc = appResults.dextrosaSeleccionadaEnCc.toFixed(1)\n    // console.log(dextrosaSeleccionadaEnCc)\n    // dextrosaSeleccionada = appResults.dextrosaSeleccionada\n    // ccDiference = appResults.ccDiference.toFixed(1)\n    // electrolitosMostrados = appResults.electrolitosMostrados\n    // porcentajeDeDextrosa = appResults.porcentajeDeDextrosa.toFixed(1)\n    // usoCateter = appResults.usoCateter\n    // cantidadDextrosaAl5Porciento = appResults.cantidadDextrosaAl5Porciento.toFixed(1)\n    // cantidadDextrosaAl10Porciento = appResults.cantidadDextrosaAl10Porciento.toFixed(1)\n    // cantidadDextrosaAl30Porciento = appResults.cantidadDextrosaAl30Porciento.toFixed(1)\n    // cantidadDextrosaAl50Porciento = appResults.cantidadDextrosaAl50Porciento.toFixed(1)\n    dextrosaSeleccionadaEnCc = appResults.dextrosaSeleccionadaEnCc\n    dextrosaSeleccionada = appResults.dextrosaSeleccionada\n    ccDiference = appResults.ccDiference\n    electrolitosMostrados = appResults.electrolitosMostrados\n    porcentajeDeDextrosa = appResults.porcentajeDeDextrosa\n    usoCateter = appResults.usoCateter\n    cantidadDextrosaAl5Porciento = appResults.cantidadDextrosaAl5Porciento\n    cantidadDextrosaAl10Porciento = appResults.cantidadDextrosaAl10Porciento\n    cantidadDextrosaAl30Porciento = appResults.cantidadDextrosaAl30Porciento\n    cantidadDextrosaAl50Porciento = appResults.cantidadDextrosaAl50Porciento\n\n    setShow(false)\n  }\n  const handleClick = () => {\n    const pesoString = patient.user_peso\n    const pesoNumber = parseInt(pesoString)\n    const peso = pesoNumber / 1000\n    const diasString = patient.user_dias\n    const dias = parseInt(diasString)\n    const appResults = appInit(peso, dias, hipoglicemiaCheck)\n    // SETEO DE VARIABLES\n    dextrosaSeleccionadaEnCc = appResults.dextrosaSeleccionadaEnCc\n    dextrosaSeleccionada = appResults.dextrosaSeleccionada\n    ccDiference = appResults.ccDiference\n    electrolitosMostrados = appResults.electrolitosMostrados\n    porcentajeDeDextrosa = appResults.porcentajeDeDextrosa\n    usoCateter = appResults.usoCateter\n    cantidadDextrosaAl5Porciento = appResults.cantidadDextrosaAl5Porciento\n    cantidadDextrosaAl10Porciento = appResults.cantidadDextrosaAl10Porciento\n    cantidadDextrosaAl30Porciento = appResults.cantidadDextrosaAl30Porciento\n    cantidadDextrosaAl50Porciento = appResults.cantidadDextrosaAl50Porciento\n\n    if(peso && dias) {\n      setShow(true)\n    }\n  }\n\n\n  // console.log(show)\n\n  return (\n    <div className=\"app-container\">\n      <AppTitle title=\"Liquidos en neonatos\" subtitle=\"LOS PRIMEROS 5 DIAS DE VIDA\" />\n      <div className=\"form-container\">\n      <form action=\"\" method=\"\">\n        <ul className=\"form\">\n          <li>\n            <label htmlFor=\"peso\">Peso del paciente (gramos)</label> <br/>\n            <input\n              className=\"inputs\" \n              type=\"text\" \n              id=\"peso\" \n              name=\"user_peso\"\n              onChange={handleChange}\n            />\n          </li>        \n          <li>\n            <label htmlFor=\"dias\">Dias de vida</label> <br/>\n            <input \n              className=\"inputs\" \n              type=\"text\" \n              id=\"dias\" \n              name=\"user_dias\" \n              onChange={handleChange}\n            />\n          </li>        \n          <li  className=\"hipoglicemia-input\">          \n            <input \n              type=\"checkbox\" \n              id=\"dias\" \n              name=\"hipoglicemia\" \n              onChange={toggleCheck}\n            />\n            <label htmlFor=\"hipoglicemia\">Tiene una hipoglicemia que requiere flujo metabolico de 9</label> <br/>\n          </li>        \n          <li className=\"button-container\">\n            <button \n              className=\"success-button\" \n              type=\"button\" \n              id=\"botonCalcular\"\n              onClick={handleClick}\n            >Calcular</button>\n          </li>        \n        </ul>\n      </form>\n      </div>\n      {show ? \n      <>\n        <div className=\"resultados-container\">\n          <h4 className=\"resultados-title\">FORMULA</h4>\n          <ul className=\"resultados-list\">\n            <li>\n              <label id=\"liquidosNecesarios\">-Administrar {dextrosaSeleccionadaEnCc.toFixed(1)} CC de {dextrosaSeleccionada}<br/> y agregar {ccDiference.toFixed(1)} CC de agua destilada. <br/>En 24 horas.</label>\n            </li>      \n            <li>\n              <label id=\"electrolitos\">{electrolitosMostrados}</label>\n            </li>\n            <li>\n              <label id=\"concentracion\">(La solución tendrá una concentración de {porcentajeDeDextrosa.toFixed(1)}% dextrosa)</label>\n            </li>      \n            <li>\n              <label id=\"cateterCentral\">{usoCateter}</label>\n            </li>        \n          </ul>\n        </div>\n        <div className=\"text-container\">\n          <h3>En caso de querer hacer los calculos manualmente estas son las cantidades de dextrosa en CC que se necesitan segun su concentracion</h3>\n        </div>\n        <div className=\"otras-dextrosas-container\">\n          <h4 className=\"resultados-title\">Otras dextrosas</h4>\n          <ul className=\"resultados-list\">\n            <li>\n              <label id=\"resultado5\">-Dextrosa al 5 en cc :---{cantidadDextrosaAl5Porciento.toFixed(1)} CC</label>\n            </li>        \n            <li>\n              <label id=\"resultado10\">-Dextrosa al 10 en cc :---{cantidadDextrosaAl10Porciento.toFixed(1)} CC</label>\n            </li>\n            <li>\n              <label id=\"resultado30\">-Dextrosa al 30 en cc :---{cantidadDextrosaAl30Porciento.toFixed(1)} CC</label>\n            </li>\n            <li>\n              <label id=\"resultado50\">-Dextrosa al 50 en cc :---{cantidadDextrosaAl50Porciento.toFixed(1)} CC</label>\n            </li>      \n          </ul>      \n        </div>\n      </>\n      : \"\"}\n    </div>\n  )\n}\n\nexport  default NeonatalFluidCalculator","import '../assets/styles/components/Header.css'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n  return(\n    <div className=\"Header\">\n      <Link to=\"/liquidos-neonatos\" className=\"logo-container\">\n        <h1 className=\"logo\">DD</h1>\n      </Link>\n      <Link to=\"/liquidos-neonatos\" className=\"title-container\">\n        <h2>Daru</h2>\n        <h2 className=\"doctor\">doctor</h2>\n      </Link>\n      <Dropdown className=\"burger-menu\">\n        <Dropdown.Toggle className=\"burger-button\" variant=\"Secondary\" id=\"dropdown-basic\">\n          ____<br/>\n          ___<br/>\n          ____\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item><Link to=\"/liquidos-neonatos\" className=\"item-menu-button\">App</Link></Dropdown.Item>\n          <Dropdown.Item><Link to=\"/about\" className=\"item-menu-button\">About</Link></Dropdown.Item>\n          <Dropdown.Item><Link to=\"/portfolio\" className=\"item-menu-button\">Portfolio</Link></Dropdown.Item>\n          <Dropdown.Item><Link to=\"/contact\" className=\"item-menu-button\">Contact</Link></Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      <div className=\"navbar\">\n        <ul className=\"nav-container\">\n          <li className=\"item-list\">\n            <Link to=\"/liquidos-neonatos\">\n              <button \n                  className=\"success-button navbar-button\" \n                  type=\"button\"\n                >App\n              </button>\n            </Link>\n          </li>\n          <li className=\"item-list\">\n            <Link to=\"/about\">\n              <button \n                  className=\"success-button navbar-button\" \n                  type=\"button\" \n                  id=\"botonCalcular\"\n                >About\n              </button>\n            </Link>\n          </li>\n          <li className=\"item-list\">\n            <Link to=\"/portfolio\">\n              <button \n                  className=\"success-button navbar-button\" \n                  type=\"button\" \n                  id=\"botonCalcular\"\n                >Portfolio\n              </button>\n            </Link>\n          </li>\n          <li className=\"item-list\">\n            <Link to=\"/contact\">\n              <button \n                  className=\"success-button navbar-button\" \n                  type=\"button\" \n                  id=\"botonCalcular\"\n                >Contact\n              </button>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import '../assets/styles/components/Layout.css'\nimport Header from './Header'\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"Main\">\n      <Header />\n        {children}\n    </div>    \n  )\n}\n\nexport default Layout","export default __webpack_public_path__ + \"static/media/MedicineProfile.d657e9fd.png\";","import '../assets/styles/components/About.css'\nimport medicineProfile from '../assets/images/MedicineProfile.png'\n\nconst About = () => {\n  return(\n    <div className=\"about-container\">\n      <h2 className=\"title-about\">About me</h2>\n      <p className=\"p-about\">I'm a medical student and web developer. <br></br></p>\n      <p className=\"p-about\">All people know at least one way to change the world, but they never act. <br></br></p>\n      <p> </p>\n      <p> </p>\n      <p className=\"p-about p-about-short\">\n        I can't stop thinking about how I can help, so if you have a good idea, I want to work with you. Get in touch with me\n      </p>\n      <div className=\"mpi-cover\">\n\n      </div>\n      <figure className=\"mpi-container\">\n      </figure>\n        <img className=\"medicine-profile-image\" src={medicineProfile} alt=\"medic watching at infinite\"/>\n    </div>\n  )\n}\n\nexport default About","import '../assets/styles/components/Contact.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faGithub, faLinkedin, faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nconst Contact = () => {\n  const instagram = <FontAwesomeIcon icon={faInstagram} size=\"8x\"/>\n  const github = <FontAwesomeIcon icon={faGithub} size=\"8x\"/>\n  const linkedin = <FontAwesomeIcon icon={faLinkedin} size=\"8x\"/>\n  const twitter = <FontAwesomeIcon icon={faTwitter} size=\"8x\"/>\n  return(\n    <div className=\"contact-container\">\n      <h2 className=\"contact-title\">Don't be shy, contact me!</h2>    \n      <div className=\"networks-container\">  \n        <a className=\"network-icon\" href=\"https://www.instagram.com/danielruizen/?igshid=146eqhcu1h6ok\">\n          {instagram}\n        </a>\n        <a className=\"network-icon\" href=\"https://www.linkedin.com/in/daniel-ruiz-9343521b8/\">\n          {linkedin}\n        </a>\n        <a className=\"network-icon\" href=\"https://github.com/Darudaniel\">\n          {github}\n        </a>\n        <a className=\"network-icon\" href=\"https://twitter.com/Darubeat\">\n          {twitter}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact","import '../assets/styles/components/Project.css'\n\nconst Project = ({title, description, image, link}) => {\n  \n  return (\n    <div className=\"Project\">\n      <a href={link}>\n        <div className=\"project-container\">\n          <h2 className=\"project-title\">{title}</h2>\n          <figure className=\"project-image-container\">\n            <img className=\"project-img\" src={image} alt=\"\" />\n          </figure>\n          <p className=\"project-description\">\n            {description}\n          </p>\n        </div>\n      </a>\n    </div>\n  )\n}\n\nexport default Project","export default __webpack_public_path__ + \"static/media/Batatabit.420c7bea.png\";","export default __webpack_public_path__ + \"static/media/Helados.5950ef4b.png\";","export default __webpack_public_path__ + \"static/media/Aplastaos.ce0bc6a9.png\";","export default __webpack_public_path__ + \"static/media/RickAndMortyHeadsOrTails.24097b86.png\";","import '../assets/styles/containers/Portfolio.css'\n\nimport Project from '../components/Project'\nimport batatabitImage from '../assets/images/Batatabit.png'\nimport heladosImage from '../assets/images/Helados.png'\nimport aplastaosImage from '../assets/images/Aplastaos.png'\nimport hotRickAndMorty from '../assets/images/RickAndMortyHeadsOrTails.png'\n\nconst Portfolio = () => {\n  return(\n    <div className=\"Portfolio\">\n      <div className=\"projects-container\">\n        <Project \n          title=\"Batatabit\" \n          description=\"Sitio web responsive para una empresa asociada a criptomonedas\"\n          image={batatabitImage}\n          link=\"https://darudaniel.github.io/Batatabit/\"\n        />\n        <Project\n          title=\"Heads or tails app\"\n          description=\"Developed in react.js, obtaining the data from a public api\"\n          image={hotRickAndMorty}\n          link=\"https://darudaniel.github.io/heads-or-tails/\"\n        />\n        <Project\n          title=\"Heladeria St.Clemente\"\n          description=\"Maqueta mobile first, para negocio local\"\n          image={heladosImage}\n          link=\"https://darudaniel.github.io/heladeria/\"\n        />\n        <Project\n          title=\"Aplastaos de pacho\"\n          description=\"Maqueta mobile first, para negocio local\"\n          image={aplastaosImage}\n          link=\"https://darudaniel.github.io/fast-food/\"\n        /> \n      </div>     \n    </div>\n  )\n}\n\nexport default Portfolio","const appInit = (peso, diasDeNacido, hipoglicemiaChecked) => {\n     //constants\n      const MINUTOS_DIA = 1440\n      const MG_DEXTROSA_AL_5 = 5000\n      const MG_DEXTROSA_AL_10 = 10000\n      const MG_DEXTROSA_AL_30 = 30000\n      const MG_DEXTROSA_AL_50 = 50000\n      const CIEN = 100\n      //variables\n      let fmIdeal\n      // let peso = results.user_peso.parseInt()\n      let dextrosaNecesaria\n      let cantidadDextrosaAl5Porciento\n      let cantidadDextrosaAl10Porciento\n      let cantidadDextrosaAl30Porciento\n      let cantidadDextrosaAl50Porciento\n      // let diasDeNacido = results.user_dias.parseInt()\n      let dextrosaSeleccionada\n      let dextrosaSeleccionadaEnCc\n      let ccDiference\n      let porcentajeDeDextrosa\n      let natrolEnCc\n      let meqNatrol\n      let katrolEnCC\n      let electrolitosMostrados\n      let usoCateter\n      //elements\n      // let hipoglicemiaChecked = results.hipoglicemia\n      // functions\n      const cantidadDeLiquidos = (dias) => {\n        switch(dias) {\n          case 1:\n            return peso * 60\n            // break\n          case 2:\n            return peso * 80\n            // break\n          case 3:\n            return peso * 100\n            // break\n          case 4:\n            return peso * 125\n            // break\n          case 5:\n            return peso * 140\n            // break\n          default:\n            console.log('el campo esta vacio')\n            break\n        }\n      }\n\n      function hypoglycemiaValidation() {\n        if(hipoglicemiaChecked) {\n          fmIdeal = 9\n        } else {\n          fmIdeal = 4\n        }\n      }\n      \n      function calculateDextroseNeeded() {\n        dextrosaNecesaria = fmIdeal * MINUTOS_DIA * peso\n      }\n      function calculateCcDextrose() {\n        cantidadDextrosaAl5Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_5\n        cantidadDextrosaAl10Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_10\n        cantidadDextrosaAl30Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_30\n        cantidadDextrosaAl50Porciento = (dextrosaNecesaria * CIEN) / MG_DEXTROSA_AL_50\n      }\n      \n      function seleccionarDextrosa(dex) {\n        if(dex > cantidadDextrosaAl10Porciento) {\n          dextrosaSeleccionada = \"Dextrosa al 10%\"\n          dextrosaSeleccionadaEnCc = cantidadDextrosaAl10Porciento\n        } else if(dex > cantidadDextrosaAl50Porciento) {\n          dextrosaSeleccionada = \"Dextrosa al 50%\"\n          dextrosaSeleccionadaEnCc = cantidadDextrosaAl50Porciento\n        } else {\n          dextrosaSeleccionada = \"Error: No se pudo seleccionar una dextrosa\"\n          dextrosaSeleccionadaEnCc = \"Error: No se pudo seleccionar una dextrosa\"\n        }\n      }\n      function calculateCcDiference() {\n        ccDiference = cantidadDeLiquidos(diasDeNacido) - dextrosaSeleccionadaEnCc\n      }\n      function finalConcentrationCalculation() {\n        porcentajeDeDextrosa = ((dextrosaNecesaria / 1000) * CIEN) / cantidadDeLiquidos(diasDeNacido)\n      }\n      function electrolytesCalculation() {\n        if(parseFloat(diasDeNacido) >= 3) {\n          meqNatrol = peso * 3\n          natrolEnCc = (meqNatrol * 10) / 20\n          katrolEnCC = natrolEnCc / 2\n          electrolitosMostrados = `-Agregar ${natrolEnCc} CC de Natrol y ${katrolEnCC} CC de Katrol`\n        } else if(parseFloat(diasDeNacido) >= 2){\n          meqNatrol = peso * 3\n          natrolEnCc = (meqNatrol * 10) / 20\n          electrolitosMostrados = `-Agregar ${natrolEnCc} CC de Natrol`\n        } else {\n          electrolitosMostrados = `-No se agregan electrolitos`\n        }\n      }\n      function catheterValidation() {\n        if(porcentajeDeDextrosa > 12.5) {\n          usoCateter = \"Debido a la concentración debe utilizarse catéter central\"\n        } else {\n          usoCateter = \"-No necesita catéter central\"\n        }\n      }\n      hypoglycemiaValidation()\n      //calculates how much dextrose the patient needs in miligrams\n      calculateDextroseNeeded()\n      //calulates the amount of dextrosa in CC based on each concentration\n      calculateCcDextrose()\n      //selects the concentration of dextrose that the patient needs\n      seleccionarDextrosa(cantidadDeLiquidos(diasDeNacido))\n      //calculates how much saline solution you need to increase to dextrose to meet the requirements\n      calculateCcDiference()\n      //calculates which is the final concentration of solution    \n      finalConcentrationCalculation()\n      //validates if the patient needs electrolits and calculate how much needs   \n      electrolytesCalculation()\n      //catheter use determination \n      catheterValidation()\n\n      return ({\n        dextrosaSeleccionadaEnCc,\n        dextrosaSeleccionada, \n        ccDiference,\n        electrolitosMostrados,\n        porcentajeDeDextrosa,\n        usoCateter,\n        cantidadDextrosaAl5Porciento,\n        cantidadDextrosaAl10Porciento,\n        cantidadDextrosaAl30Porciento,\n        cantidadDextrosaAl50Porciento\n      })\n\n} \n    \nexport default appInit","import '../assets/styles/components/AppTitle.css'\n\nconst AppTitle = ({ title, subtitle }) => {\n  return(\n    <div className=\"app-title-container\">\n      <h2 className=\"app-title\">{title}</h2>\n      {subtitle ? <h2 className=\"app-subtitle\">{subtitle}</h2>: \"\"}\n    </div>\n  )\n}\n\nexport default AppTitle","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Layout from './components/Layout'\nimport About from './containers/About'\nimport Contact from './containers/Contact'\nimport Portfolio from './containers/Portfolio.jsx'\nimport NeonatalFluidCalculator from './containers/NeonatalFluidCalculator';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          {/* CONTAINERS */}\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n\n          {/* APPS */}\n          <Route exact path=\"/liquidos-neonatos\" component={NeonatalFluidCalculator} />\n          \n          {/* DEFAULT */}\n          <Route exact component={NeonatalFluidCalculator} />\n        </Switch>\n      </Layout>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}